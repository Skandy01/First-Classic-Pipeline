

trigger:
- main
- feature/*

parameters:

- name: 'runApply'
  displayName: 'Terraform_Apply chalana hai ?'
  type: boolean
  default: false

- name: 'Scanning_Job'  
  displayName: 'Apne code ki scanning krni hai ?'
  type: boolean
  default: false

variables:
  workDir: '$(System.DefaultWorkingDirectory)/Infra-QA'
  wif: 'Workload_Identity_Federation'


jobs:

- job: 'Terraform_init_plan'
  displayName: 'Terraform init to plan'

  pool: 'Terraform_Infra_Agent'

  steps: 
  - task: TerraformInstaller@1
    displayName: "Terraform Install"
    inputs:
      terraformVersion: 'latest'

  - task: TerraformTask@5
    displayName: 'Terraform init'
    inputs:
      provider: 'azurerm'
      command: 'init'
      workingDirectory: '$(workDir)'
      backendServiceArm: '$(wif)'
      backendAzureRmResourceGroupName: 'rg-terraform'
      backendAzureRmStorageAccountName: 'stgado'
      backendAzureRmContainerName: 'mycnt'
      backendAzureRmKey: 'dev.terraform.tfsatate'

  - task: TerraformTask@5
    displayName: 'Terraform fmt'
    inputs:
      provider: 'azurerm'
      command: 'custom'
      workingDirectory: '$(workDir)'
      outputTo: 'console'
      customCommand: 'fmt'
      environmentServiceNameAzureRM: '$(wif)'


  - task: TerraformTask@5
    displayName: 'Terraform validate'
    inputs:
      provider: 'azurerm'
      command: 'validate'
      workingDirectory: '$(workDir)'

  - task: TerraformTask@5
    displayName: 'Terraform plan'
    inputs:
      provider: 'azurerm'
      command: 'plan'
      workingDirectory: '$(workDir)'
      environmentServiceNameAzureRM: '$(wif)'

- job: 'Scanning_Job'

  condition: eq(${{ parameters.Scanning_Job }}, true)
  pool: 'Terraform_Infra_Agent'
  displayName: 'Scanning Tools Job'

  steps:
  - task: tfsec@1
    inputs:
      version: 'v1.26.0'
      dir: '$(workDir)'

- job: 'manual_approval'
  displayName: 'Manual Approval dedo'
  dependsOn: Terraform_init_plan

  pool: server

  steps: 
  - task: ManualValidation@1
    inputs:
      notifyUsers: 'devopscollab101@gmail.com'
      approvers: 'devopscollab101@gmail.com'

- job: 'Terraform_init_apply'

  displayName: 'Terraform init and apply'
  dependsOn: 'manual_approval'
  condition: and(succeeded(), eq(${{ parameters.runApply }}, true), eq(variables['Build.SourceBranch'], 'refs/heads/main'))

  pool: 'Terraform_Infra_Agent'

  steps:

  - task: TerraformTask@5
    displayName: 'Terraform init'

    inputs:
      provider: 'azurerm'
      command: 'init'
      workingDirectory: '$(workDir)'
      backendServiceArm: '$(wif)'
      backendAzureRmResourceGroupName: 'rg-terraform'
      backendAzureRmStorageAccountName: 'stgado'
      backendAzureRmContainerName: 'mycnt'
      backendAzureRmKey: 'dev.terraform.tfsatate'
  
  - task: TerraformTask@5
    displayName: 'Terraform apply'

    inputs:
      provider: 'azurerm'
      command: 'apply'
      workingDirectory: '$(workDir)'
      backendServiceArm: '$(wif)'